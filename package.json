{
  "name": "bemintic",
  "version": "0.0.1",
  "description": "",
  "author": {
    "name": "Nicolas Potier"
  },
  "private": true,
  "license": "MIT",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "SET NODE_ENV=dev && nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "migration:generate": "ts-node node_modules/.bin/typeorm migration:generate",
    "migration:run": "ts-node node_modules/.bin/typeorm migration:run",
    "migration:revert": "ts-node node_modules/.bin/typeorm migration:revert",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "migrations:generate": "yarn run typeorm migration:generate -n",
    "migrations:generate:admin": "yarn run typeorm migration:generate -n 'create-new-admin-user'",
    "migrations:run": "yarn typeorm migration:run",
    "migrations:show": "yarn typeorm migration:show",
    "migrations:drop": "yarn typeorm schema:drop",
    "migrations:revert": "yarn typeorm migration:revert",
    "docker:build:dev": "docker build --target development --build-arg NODE_ENV=prod -t tienda-dok-dev .",
    "docker:build:prod": "docker build --target production --build-arg NODE_ENV=prod -t tienda-dok-prod .",
    "docker:run:dev": "docker run -dp 4200:3002 tienda-dok-dev",
    "docker:run:prod": "docker run -dp 4200:3002 tienda-dok-prod",
    "compose:up:prod": "docker-compose up -d prod",
    "compose:up:dev": "docker-compose up -d dev",
    "compose:down": "docker-compose down",
    "heroku:login": "heroku login",
    "heroku:container": "heroku container:login",
    "heroku:container:push": "heroku container:push web -a simple-commerce-back",
    "heroku:release:push": "heroku container:release web -a simple-commerce-back"
  },
  "dependencies": {
    "@nestjs/axios": "^0.0.1",
    "@nestjs/common": "^8.0.0",
    "@nestjs/config": "^1.0.2",
    "@nestjs/core": "^8.0.0",
    "@nestjs/graphql": "^9.1.2",
    "@nestjs/mapped-types": "^1.0.0",
    "@nestjs/platform-express": "^8.0.0",
    "@nestjs/schedule": "^1.0.1",
    "@nestjs/swagger": "^5.1.1",
    "@nestjs/typeorm": "^8.0.2",
    "apollo-server-express": "^3.5.0",
    "class-transformer": "^0.5.0",
    "class-validator": "^0.13.1",
    "comment-parser": "^1.2.3",
    "compression": "^1.7.4",
    "csurf": "^1.11.0",
    "express": "^4.17.1",
    "express-formidable": "^1.2.0",
    "express-session": "^1.17.2",
    "graphql": "^15",
    "joi": "^17.4.2",
    "pg": "^8.7.1",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "typeorm": "^0.2.38",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.0.0",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/cache-manager": "^3.4.2",
    "@types/cron": "^1.7.3",
    "@types/dotenv": "^8.2.0",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.0.1",
    "@types/node": "^16.0.0",
    "@types/pg": "^8.6.1",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^8.3.1",
    "@typescript-eslint/eslint-plugin": "^4.28.2",
    "@typescript-eslint/parser": "^4.28.2",
    "dotenv": "^10.0.0",
    "eslint": "^7.30.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "jest": "27.0.6",
    "npm-check-updates": "^11.8.3",
    "prettier": "^2.3.2",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.5.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
